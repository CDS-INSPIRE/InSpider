<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx.xsd">

	
	<!--
		Let the Spring container act as a JPA container and inject an
		EnitityManager from the EntityManagerFactory into @PersistenceContext
		annotated properties/methods.
	-->
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

	<!--
		The entityManagerFactory creates the EntityManager's used by the DAO's
	-->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="cds" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="false" />
				<property name="generateDdl" value="true" />
				<property name="databasePlatform" value="org.hibernate.dialect.PostgreSQLDialect" />
			</bean>
		</property>
		<property name="dataSource" ref="dataSource"/>
		<property name="jpaDialect" ref="jpaDialect"/>
		<property name="jpaPropertyMap">
			<props>
				<prop key="hibernate.hbm2ddl.auto">validate</prop>
			</props>
		</property>
	</bean>

	<bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
	

	<!--
		The JpaTransactionManager is responsible for creating EntityManagers
		opening transactions and binding them to the current thread context.
	-->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!--
		Tell Spring to put transactional advice on any class or method that
		has an @Transactional annotation on it.
	-->
	<tx:annotation-driven mode="aspectj"/>

	<!-- Dao's -->
	<bean id="managerDao" class="nl.ipo.cds.dao.impl.ManagerDaoImpl">
		<constructor-arg ref="ldapTemplate" />
		<property name="ldapBase" value="${ldap.ldapBase}"/>
		<property name="ldapGroupDn" value="${ldap.ldapGroupDn}"/>
		<property name="ldapPeopleBaseDn" value="${ldap.ldapPeopleBaseDn}"/>
	</bean>
	<bean id="jobDao" class="nl.ipo.cds.dao.impl.JobDaoImpl">
		<constructor-arg ref="managerDao"/>
	</bean>
	<bean id="tagDao" class="nl.ipo.cds.dao.impl.TagDaoImpl">
	</bean>
	
	
</beans>